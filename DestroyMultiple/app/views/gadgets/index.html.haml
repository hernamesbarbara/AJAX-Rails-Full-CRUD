%p#notice= notice

%h1="Listing #{pluralize(@gadgets.count,'Gadget')} for #{@widget.name}"

%table{ :cellpadding => "7;", :border => "1px solid #e8e9eb; font-size:20px;"}
  %thead
    %tr
      %th{:style => 'background-color:#78c4e5;'} Created Date
      %th{:style => 'background-color:#78c4e5;'} Gadget
      %th{:style => 'background-color:#78c4e5;'}=check_box_tag 'check-all', @widget.id, false, :class => 'checkbox'

  %tbody
    -if @widget.gadgets.any?
      =render @widget.gadgets
%br/
= link_to 'New Gadget', new_widget_gadget_path(@widget)
\|
= link_to 'Edit', edit_widget_path(@widget)
\|
= link_to 'Back', widgets_path
\|
=button_tag "Delete these", controller: 'gadgets', remote: true, class: 'button pill', id: 'delete-selected'
:javascript
  //this method will toggle an individual 
  //checkbox between checked and unchecked
  $(function() {
    return $(".checkbox").click(function() {
      var $checkbox = $(this)[0];
      if ($checkbox.checked === true) {
        return $($checkbox).attr("checked", "checked");
      } else {
        return $($checkbox).removeAttr("checked");
      }
    });
  });

  //this method will toggle ALL checkboxes 
  //from checked to unchecked
  $(function() {
    return $("#check-all").click(function() {
      if ($(this).attr("checked") != null) {
        var $all = $(':checkbox');
        return $.each($($all), function(index, box) {
          var $box=$(box);
          return $box.attr("checked", "checked");
        });
      } else {
          var $all = $(':checkbox');
          return $.each($($all), function(index, box) {
          var $input;
            var $box=$(box);
          return $box.removeAttr('checked');
        });
      }
    });
  });

:coffeescript
  $ ->
    $("#delete-selected").click (event) ->
      widget_id=$("#check-all").val()
    
      gadget_ids=[]
      $.each $(".checkbox:checked"), (index, checkbox) ->
        if $(checkbox).attr('name') != "check-all" and $(checkbox).val() not in gadget_ids
          gadget_ids.push($(checkbox).val())

      $.ajaxSetup cache: false, beforeSend: (xhr) ->
        xhr.setRequestHeader "X-CSRF-Token", $("meta[name=\"csrf-token\"]").attr("content")
    
      $.ajax
        type: "POST"
        url: window.location.pathname+"/destroy_multiple"
        data: "widget_id=" + widget_id + "&gadget_ids=" + gadget_ids
        dataType: 'json'
        success: (data) ->
          msg=data
          
          ids_to_remove=[]
          $.each $(msg), (index, gadget) ->
            ids_to_remove.push(gadget.id)
          
          for id in ids_to_remove
            table_row = $("input#gadget_" + id).parent().parent()
            $(table_row).fadeOut 1000, ->
              $(table_row).remove()






